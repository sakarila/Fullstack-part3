{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","props","value","nameFilter","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","namesToShow","persons","setPersons","setErrorMessage","map","person","key","name","number","onClick","deletedPerson","window","confirm","personService","filter","catch","n","setTimeout","SuccessNotification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorNotification","App","useState","setNewName","setNewNumber","setNameFilter","successMessage","setSuccessMessage","errorMessage","useEffect","allPersons","toLowerCase","startsWith","event","target","preventDefault","some","find","x","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6c3f18a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data);\r\n  }\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Filter = (props) => {\n  return (\n    <div> filter shown with <input value={props.nameFilter} onChange={props.handleFilterChange}/></div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div> name: <input value={props.newName} onChange={props.handleNameChange}/></div>\n      <div> number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\n      <div><button type=\"submit\">add</button></div>\n    </form>\n  )\n}\n\nconst Persons = ({namesToShow, persons, setPersons, setErrorMessage}) => {\n\n  const handleNameRemove = (deletedPerson) => {\n    const result = window.confirm(`Delete ${deletedPerson.name} ?`);\n    if (result) {\n      personService.remove(deletedPerson.id)\n      .then(() => setPersons(persons.filter(person => person.id !== deletedPerson.id)))\n      .catch(() => {\n        setErrorMessage(`Information of ${deletedPerson.name} has already been removed from the server`)\n        setPersons(persons.filter(n => n.id !== deletedPerson.id))\n        setTimeout(() => { setErrorMessage(null) }, 5000)\n      })\n    }\n  }\n\n  return (\n    <div>\n      {namesToShow.map(person => \n        <p key={person.name}>{person.name} {person.number} <button onClick={() => handleNameRemove(person)}>delete</button></p>\n      )}\n    </div>\n  )\n}\n\nconst SuccessNotification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  const successMessageStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px'\n  }\n\n  return (\n    <div style={successMessageStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  const errorMessageStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px'\n  }\n\n  return (\n    <div style={errorMessageStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ successMessage, setSuccessMessage] = useState(null);\n  const [ errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll()\n     .then(allPersons => setPersons(allPersons)) }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (persons.some(person => person.name === newName)) {\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n      if (result) {\n        const person = persons.find(person => person.name === newName);\n        personService.update(person.id, {name: newName, number: newNumber })\n         .then(response => {\n           setPersons(persons.map(x => x.id !== person.id ? x : response))\n           setSuccessMessage(`Updated ${newName}! `)\n           setTimeout(() => { setSuccessMessage(null) }, 5000)\n         })\n      }\n    } else {\n      const newPerson = {name: newName, number: newNumber}\n      personService.create(newPerson)\n       .then(response => { setPersons(persons.concat(response)) \n        setSuccessMessage(`Added ${newName}! `)\n        setTimeout(() => { setSuccessMessage(null) }, 5000)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  const namesToShow = persons.filter(person => person.name.toLowerCase().startsWith(nameFilter.toLowerCase()));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage}/>\n      <ErrorNotification message={errorMessage}/>\n      <Filter nameFilter={nameFilter} handleFilterChange={handleFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n        addPerson={addPerson}\n      />\n      <h3>Numbers</h3>\n      <Persons namesToShow={namesToShow} persons={persons} setPersons={setPersons} setErrorMessage={setErrorMessage} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}